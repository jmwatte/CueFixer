name: CI - Pester Tests

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest, windows-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache PowerShell modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.local/share/powershell/Modules
            C:\\Users\\runneradmin\\Documents\\PowerShell\\Modules
            C:\\Users\\runner\\Documents\\PowerShell\\Modules
          key: ${{ runner.os }}-psmodules-${{ hashFiles('**/*.ps1') }}
          restore-keys: |
            ${{ runner.os }}-psmodules-

      - name: Install Pester
        shell: pwsh
        run: |
          Set-PSRepository -Name 'PSGallery' -InstallationPolicy Trusted -ErrorAction SilentlyContinue
          Install-Module -Name Pester -Scope CurrentUser -Force

      - name: Run Pester tests
        shell: pwsh
        run: |
          Import-Module -Name ./CueFixer.psm1 -Force -Verbose
          Invoke-Pester -Script @{ Path = './Tests'; Output = 'Detailed' }

      - name: Run demo smoke test (dry-run)
        shell: pwsh
        run: |
          Import-Module -Name ./CueFixer.psm1 -Force -Verbose
          ./examples/run-demo.ps1
