name: CI - Analysis and Tests

on:
  push:
  pull_request:

jobs:
  analyze-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run PSScriptAnalyzer and Pester
        shell: pwsh
        env:
          TEMP: ${{ runner.temp }}
          TMPDIR: ${{ runner.temp }}
        run: |
          # Install PSScriptAnalyzer and run it safely: if the analyzer throws an unexpected
          # exception (we've seen null-reference errors in some runner images), continue
          # the job and surface a warning rather than failing the whole workflow.
          try {
            Install-Module -Name PSScriptAnalyzer -Force -Scope CurrentUser -Confirm:$false
            Import-Module PSScriptAnalyzer -Force
            $findings = Invoke-ScriptAnalyzer -Path . -Recurse -ErrorAction Stop
            $errors = $findings | Where-Object { $_.Severity -eq 'Error' }
            if ($errors) {
              Write-Host "PSScriptAnalyzer found ERROR-level issues:" -ForegroundColor Yellow
              $errors | Format-Table -AutoSize
              exit 1
            } elseif ($findings) {
              Write-Host "PSScriptAnalyzer found non-error issues (warnings/information):" -ForegroundColor Yellow
              $findings | Where-Object { $_.Severity -ne 'Error' } | Format-Table -AutoSize
            } else {
              Write-Host "No PSScriptAnalyzer issues found." -ForegroundColor Green
            }
          } catch {
            Write-Host "Warning: PSScriptAnalyzer failed to run cleanly:" -ForegroundColor Yellow
            Write-Host $_.Exception.Message -ForegroundColor Yellow
            Write-Host "Continuing without analyzer results to allow Pester tests to run." -ForegroundColor Yellow
          }

          # Install and run Pester (use -Path for Pester v5)
          Install-Module -Name Pester -Force -Scope CurrentUser -Confirm:$false
          Import-Module Pester -Force
          Invoke-Pester -Path 'Tests' -EnableExit
